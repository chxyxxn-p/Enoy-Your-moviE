<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

<!-- 스프링 jdbc는 jndi를 접근할 수 있다 : -->
   <jee:jndi-lookup jndi-name="jdbc/oracle"
      id="dataSource" resource-ref="true" />

   <!-- 스프링 jdbc를 사용하는 이유는 트랜잭션 등을 지원하기 때문이므로 지금 사용중인 퍼시스턴스영역의 기술에 따라 알맞는 트랜잭션 매니저를 등록 -->
   <bean id="dataSourceTransactionManager"
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
      p:dataSource-ref="dataSource" />

   <!-- mybatis 연동 -->
   <bean id="sqlSessionFactoryBean"
      class="org.mybatis.spring.SqlSessionFactoryBean"
      p:dataSource-ref="dataSource"
      p:configLocation="classpath:com/eye/mybatis/config.xml" />
   
   <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg index="0" ref="sqlSessionFactoryBean"/>
   </bean>
   
   <!-- 개발자가 직접 만든 메소드나 클래스는 어노테이션 컴포넌트를 붙일 수 있지만,
   이미 만들어져있는 메소드나 클래스에는 어노테이션을 붙일 수 없으니 직접 명시하여 빈 등록 해야한다
   개발자가 만든 것들은 자동 등록을 사용한다 -->
   <context:component-scan base-package="com.eye.model"/>

	
</beans>